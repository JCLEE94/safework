# Default values for safework
replicaCount: 3

image:
  repository: registry.jclee.me/jclee94/safework
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  app.kubernetes.io/version: "1.0.4"

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: NodePort
  port: 3001
  nodePort: 32301
  targetPort: 3001

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
  hosts:
    - host: safework.jclee.me
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
config:
  environment: production
  appName: "SafeWork Pro"
  logLevel: INFO
  port: 3001

# Database configuration
database:
  enabled: true
  host: safework-postgres
  port: 5432
  name: health_management
  user: admin
  passwordSecret: safework-secrets
  passwordKey: database-password

# PostgreSQL standalone configuration
postgres:
  enabled: false
  image: postgres:15
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    size: 10Gi

# Redis configuration  
redis:
  enabled: true
  host: safework-redis
  port: 6379
  db: 0
  image: redis:7-alpine
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: false
    size: 1Gi

# Security configuration
security:
  jwtSecretSecret: safework-secrets
  jwtSecretKey: jwt-secret
  secretKeySecret: safework-secrets
  secretKeyKey: secret-key

# PostgreSQL subchart configuration
postgresql:
  enabled: true
  auth:
    username: admin
    database: health_management
    existingSecret: safework-secrets
    secretKeys:
      adminPasswordKey: database-password
  primary:
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m

# Redis subchart configuration  
redis-ha:
  enabled: false

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false

# Registry configuration for image pull secrets
registry:
  username: admin
  password: bingogo1
  auth: YWRtaW46YmluZ29nbzE=