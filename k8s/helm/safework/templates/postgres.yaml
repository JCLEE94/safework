{{- if .Values.postgres.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
    {{- include "safework.labels" . | nindent 4 }}
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.passwordSecret }}
                  key: {{ .Values.database.passwordKey }}
            - name: POSTGRES_DB
              value: {{ .Values.database.name }}
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
          {{- if .Values.postgres.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: {{ .Values.postgres.service.type }}
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: postgres
  selector:
    app: postgres
{{- end }}