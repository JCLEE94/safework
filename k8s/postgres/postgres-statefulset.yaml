---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: safework
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgres
    component: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: safework
  labels:
    app: postgres
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      component: database
  template:
    metadata:
      labels:
        app: postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: PGDATA
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config-volume
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-initdb
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: postgres-config-volume
        configMap:
          name: postgres-config
      - name: postgres-initdb
        configMap:
          name: postgres-initdb
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# PostgreSQL Initialization Scripts
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: safework
  labels:
    app: postgres
    component: init
data:
  01-init.sql: |
    -- Create Korean locale support
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    
    -- Set timezone
    SET timezone = 'Asia/Seoul';
    
    -- Create additional database user if needed
    -- CREATE USER safework_user WITH PASSWORD 'safework123';
    -- GRANT ALL PRIVILEGES ON DATABASE health_management TO safework_user;
    
  02-korean-locale.sql: |
    -- Korean locale setup
    ALTER DATABASE health_management SET lc_collate = 'ko_KR.UTF-8';
    ALTER DATABASE health_management SET lc_ctype = 'ko_KR.UTF-8';
    ALTER DATABASE health_management SET timezone = 'Asia/Seoul';