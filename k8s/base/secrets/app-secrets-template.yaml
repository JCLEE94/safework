---
# This is a template file. DO NOT commit actual secrets!
# Use external secret management (Sealed Secrets, External Secrets Operator, etc.)
apiVersion: v1
kind: Secret
metadata:
  name: safework-secrets
  namespace: safework
  labels:
    app: safework
    component: secrets
type: Opaque
stringData:
  # Database Secrets
  DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
  DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"
  
  # Redis Secrets
  REDIS_URL: "redis://${REDIS_HOST}:${REDIS_PORT}/0"
  
  # JWT Secrets
  JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "1440"
  
  # Encryption Secrets
  SECRET_KEY: "${SECRET_KEY}"
  
  # Docker Registry Secrets
  REGISTRY_USERNAME: "${REGISTRY_USERNAME}"
  REGISTRY_PASSWORD: "${REGISTRY_PASSWORD}"
  
  # SMTP Secrets (if email functionality is used)
  SMTP_PASSWORD: "${SMTP_PASSWORD}"
  SMTP_USERNAME: "${SMTP_USERNAME}"
  
  # External API Keys (if any)
  API_KEY: "${API_KEY}"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: safework
  labels:
    app: postgres
    component: secrets
type: Opaque
stringData:
  POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
  POSTGRES_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
---
# Example: Using Sealed Secrets
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   name: safework-secrets
#   namespace: safework
# spec:
#   encryptedData:
#     DATABASE_PASSWORD: AgA... (encrypted value)
#     JWT_SECRET_KEY: AgB... (encrypted value)