apiVersion: apps/v1
kind: Deployment
metadata:
  name: safework
  namespace: safework
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: safework
  template:
    metadata:
      labels:
        app: safework
        app.kubernetes.io/instance: safework
        app.kubernetes.io/name: safework
      annotations:
        timestamp: "2025-01-10-fix-label"
    spec:
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: wait-for-db
        image: postgres:15
        command:
        - sh
        - -c
        - |
          until pg_isready -h postgres -p 5432 -U admin; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis -p 6379 ping; do
            echo "Waiting for Redis..."
            sleep 2
          done
          echo "Redis is ready!"
      containers:
      - name: safework
        image: registry.jclee.me/safework:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "3001"
        - name: DATABASE_HOST
          value: "postgres"
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        envFrom:
        - secretRef:
            name: safework-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 180
          periodSeconds: 60
          timeoutSeconds: 15
          failureThreshold: 5
