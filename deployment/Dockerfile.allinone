# SafeWork Pro - All-in-One Container with PostgreSQL and Redis
# 건설업 보건관리 시스템 - PostgreSQL/Redis 내장형 컨테이너

FROM node:18-alpine AS frontend-builder
ARG BUILD_TIME
ENV VITE_BUILD_TIME=$BUILD_TIME

WORKDIR /app
COPY frontend/package*.json ./
COPY frontend/index.html ./
RUN npm install

COPY frontend/src/ ./src/
COPY frontend/vite.config.ts frontend/tsconfig.json frontend/tsconfig.node.json ./
COPY frontend/tailwind.config.js frontend/postcss.config.js ./
RUN npm run build

# 빌드 결과 검증
RUN ls -la /app/dist/ && test -f /app/dist/index.html || (echo "❌ React 빌드 실패: index.html 없음" && exit 1)

# All-in-One Backend with PostgreSQL and Redis
FROM python:3.11-slim AS backend

ARG BUILD_TIME
ENV BUILD_TIME=$BUILD_TIME
ENV TZ=Asia/Seoul

WORKDIR /app

# 시스템 의존성 설치 (PostgreSQL, Redis 포함)
RUN apt-get update && apt-get install -y \
    postgresql-15 \
    postgresql-client-15 \
    redis-server \
    supervisor \
    curl \
    wget \
    tzdata \
    wkhtmltopdf \
    fonts-nanum \
    libreoffice \
    --no-install-recommends \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && rm -rf /var/lib/apt/lists/*

# PostgreSQL 초기 설정
USER postgres
RUN /etc/init.d/postgresql start && \
    psql --command "CREATE USER admin WITH SUPERUSER PASSWORD 'password';" && \
    createdb -O admin health_management && \
    echo "host all all 127.0.0.1/32 md5" >> /etc/postgresql/15/main/pg_hba.conf && \
    echo "listen_addresses='localhost'" >> /etc/postgresql/15/main/postgresql.conf

USER root

# Redis 설정
RUN echo "bind 127.0.0.1" >> /etc/redis/redis.conf && \
    echo "protected-mode no" >> /etc/redis/redis.conf

# Python 의존성 설치
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 백엔드 소스 복사
COPY src/ ./src/
COPY main.py pytest.ini ./

# 프론트엔드 빌드 복사
COPY --from=frontend-builder /app/dist ./dist/

# Document 폴더 복사
COPY document/ ./document/

# 업로드 및 로그 디렉토리 생성
RUN mkdir -p uploads logs /var/run/postgresql

# Supervisor 설정
RUN echo "[supervisord]" > /etc/supervisor/conf.d/supervisord.conf && \
    echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:postgresql]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/15/main -c config_file=/etc/postgresql/15/main/postgresql.conf" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=postgres" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=1" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:redis]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/bin/redis-server /etc/redis/redis.conf" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=2" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:safework]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/local/bin/python /app/main.py" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "directory=/app" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=10" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "startsecs=10" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/app/logs/safework.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/app/logs/safework-error.log" >> /etc/supervisor/conf.d/supervisord.conf

# 권한 설정
RUN chown -R postgres:postgres /var/lib/postgresql /var/run/postgresql

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:8000/health || exit 1

# 포트 노출
EXPOSE 8000 5432 6379

# Supervisor로 모든 서비스 실행
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]