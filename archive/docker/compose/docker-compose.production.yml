version: '3.8'

services:
  health-app:
    image: ${DOCKER_REGISTRY:-registry.jclee.me}/${DOCKER_IMAGE_NAME:-health-management-system}:${DOCKER_TAG:-latest}
    container_name: ${CONTAINER_NAME:-health-management-system}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3001}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-health_management}
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-32-chars-long}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TZ=${TZ:-Asia/Seoul}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - health-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER_NAME:-health-postgres}
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-health_management}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS:---encoding=UTF-8}
      - TZ=${TZ:-Asia/Seoul}
      - postgres_data:/var/lib/postgresql/data
    networks:
      - health-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d health_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME:-health-redis}
    restart: unless-stopped
      - redis_data:/data
    networks:
      - health-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_data:
  redis_data:

networks:
  health-network:
    driver: bridge