{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  labels:
    {{- include "safework.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.redis.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.redis.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: redis-storage
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.redis.name }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.redis.name }}
  labels:
    {{- include "safework.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: {{ .Values.redis.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
{{- if .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.redis.name }}-pvc
  labels:
    {{- include "safework.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
{{- end }}
{{- end }}