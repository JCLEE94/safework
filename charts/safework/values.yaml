replicaCount: 1

image:
  repository: registry.jclee.me/safework
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 3001
  targetPort: 3001

ingress:
  enabled: true
  className: "traefik"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-https-redirect@kubernetescrd
  hosts:
    - host: safework.jclee.me
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: safework-tls
      hosts:
        - safework.jclee.me

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

env:
  - name: ENVIRONMENT
    value: "production"
  - name: DATABASE_HOST
    value: "localhost"
  - name: DATABASE_PORT
    value: "5432"
  - name: DATABASE_NAME
    value: "health_management"
  - name: DATABASE_USER
    value: "admin"
  - name: DATABASE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: safework-secrets
        key: db-password
  - name: REDIS_HOST
    value: "localhost"
  - name: REDIS_PORT
    value: "6379"
  - name: JWT_SECRET
    valueFrom:
      secretKeyRef:
        name: safework-secrets
        key: jwt-secret

volumes:
  - name: uploads
    hostPath:
      path: /data/safework/uploads
      type: DirectoryOrCreate
  - name: logs
    hostPath:
      path: /data/safework/logs
      type: DirectoryOrCreate
  - name: instance
    hostPath:
      path: /data/safework/instance
      type: DirectoryOrCreate

volumeMounts:
  - name: uploads
    mountPath: /app/uploads
  - name: logs
    mountPath: /app/logs
  - name: instance
    mountPath: /app/instance

probes:
  liveness:
    httpGet:
      path: /health
      port: 3001
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
  readiness:
    httpGet:
      path: /health
      port: 3001
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false

# ArgoCD Image Updater 설정
argocd:
  imageUpdater:
    enabled: true
    imageList: |
      safework=registry.jclee.me/safework
    writeBackMethod: git
    gitBranch: main
    gitCommitUser: argocd-image-updater
    gitCommitEmail: image-updater@argocd
    gitCommitTemplate: |
      build: update image to {{.Image.Tag}}
    allowTags: '^prod-[0-9]{8}-[a-f0-9]{7}$'
    updateStrategy: latest
    pullSecret: ""