2025-06-24T07:37:56.5154869Z ##[group]Run appleboy/ssh-action@v1.0.0
2025-06-24T07:37:56.5155174Z with:
2025-06-24T07:37:56.5155461Z   host: ***
2025-06-24T07:37:56.5155648Z   username: ***
2025-06-24T07:37:56.5155840Z   port: ***
2025-06-24T07:37:56.5161364Z   script: echo "🚀 Starting deployment..."

# Navigate to project directory
cd ~/app/health || { echo "Project directory not found"; exit 1; }

# Pull latest code
echo "📥 Pulling latest code..."
git pull origin main || { echo "Git pull failed"; exit 1; }

# Build Docker image
echo "🔨 Building Docker image..."
docker build -t ***/health-management-system:latest . || { echo "Docker build failed"; exit 1; }

# Tag with commit SHA
docker tag ***/health-management-system:latest ***/health-management-system:43dbccda066392f8f81ab87191dc7fc3f91b219e

# Login to registry
echo "🔐 Logging in to registry..."
echo "***" | docker login *** -u *** --password-stdin || echo "⚠️ Registry login failed"

# Push to registry
echo "📤 Pushing to registry..."
docker push ***/health-management-system:latest || echo "⚠️ Push failed - continuing with local image"
docker push ***/health-management-system:43dbccda066392f8f81ab87191dc7fc3f91b219e || echo "⚠️ Push failed - continuing with local image"

# If using Watchtower
if [ -f docker-compose.watchtower.yml ]; then
  echo "🔄 Watchtower will detect and update the container..."
  # Just ensure Watchtower is running
  docker ps | grep watchtower || docker-compose -f docker-compose.watchtower.yml up -d watchtower
else
  # Manual update
  echo "🔄 Updating containers..."
  /usr/local/bin/docker-compose pull || true
  /usr/local/bin/docker-compose up -d --force-recreate
fi

# Health check
echo "🏥 Running health check..."
sleep 15
if curl -f http://localhost:3001/health; then
  echo "✅ Deployment successful!"
  echo "📊 Container status:"
  docker ps | grep health
else
  echo "❌ Health check failed"
  echo "📋 Container logs:"
  docker logs health-management-system --tail=50 || /usr/local/bin/docker-compose logs --tail=50 health-app
  exit 1
fi
2025-06-24T07:37:56.5167256Z   timeout: 30s
2025-06-24T07:37:56.5167458Z   command_timeout: 10m
2025-06-24T07:37:56.5167662Z   proxy_port: 22
2025-06-24T07:37:56.5167858Z   proxy_timeout: 30s
2025-06-24T07:37:56.5168052Z env:
2025-06-24T07:37:56.5168258Z   REGISTRY: ***
2025-06-24T07:37:56.5168471Z   IMAGE_NAME: health-management-system
2025-06-24T07:37:56.5168727Z ##[endgroup]
2025-06-24T07:37:56.5265638Z ##[command]/usr/bin/docker run --name d58f3fbb1d4897e4b038bf6ac39a069d75a_8e6975 --label 968d58 --workdir /github/workspace --rm -e "REGISTRY" -e "IMAGE_NAME" -e "INPUT_HOST" -e "INPUT_USERNAME" -e "INPUT_KEY" -e "INPUT_PORT" -e "INPUT_SCRIPT" -e "INPUT_PASSPHRASE" -e "INPUT_PASSWORD" -e "INPUT_SYNC" -e "INPUT_USE_INSECURE_CIPHER" -e "INPUT_CIPHER" -e "INPUT_TIMEOUT" -e "INPUT_COMMAND_TIMEOUT" -e "INPUT_KEY_PATH" -e "INPUT_FINGERPRINT" -e "INPUT_PROXY_HOST" -e "INPUT_PROXY_PORT" -e "INPUT_PROXY_USERNAME" -e "INPUT_PROXY_PASSWORD" -e "INPUT_PROXY_PASSPHRASE" -e "INPUT_PROXY_TIMEOUT" -e "INPUT_PROXY_KEY" -e "INPUT_PROXY_KEY_PATH" -e "INPUT_PROXY_FINGERPRINT" -e "INPUT_PROXY_CIPHER" -e "INPUT_PROXY_USE_INSECURE_CIPHER" -e "INPUT_SCRIPT_STOP" -e "INPUT_ENVS" -e "INPUT_ENVS_FORMAT" -e "INPUT_DEBUG" -e "INPUT_ALLENVS" -e "HOME" -e "GITHUB_JOB" -e "GITHUB_REF" -e "GITHUB_SHA" -e "GITHUB_REPOSITORY" -e "GITHUB_REPOSITORY_OWNER" -e "GITHUB_REPOSITORY_OWNER_ID" -e "GITHUB_RUN_ID" -e "GITHUB_RUN_NUMBER" -e "GITHUB_RETENTION_DAYS" -e "GITHUB_RUN_ATTEMPT" -e "GITHUB_ACTOR_ID" -e "GITHUB_ACTOR" -e "GITHUB_WORKFLOW" -e "GITHUB_HEAD_REF" -e "GITHUB_BASE_REF" -e "GITHUB_EVENT_NAME" -e "GITHUB_SERVER_URL" -e "GITHUB_API_URL" -e "GITHUB_GRAPHQL_URL" -e "GITHUB_REF_NAME" -e "GITHUB_REF_PROTECTED" -e "GITHUB_REF_TYPE" -e "GITHUB_WORKFLOW_REF" -e "GITHUB_WORKFLOW_SHA" -e "GITHUB_REPOSITORY_ID" -e "GITHUB_TRIGGERING_ACTOR" -e "GITHUB_WORKSPACE" -e "GITHUB_ACTION" -e "GITHUB_EVENT_PATH" -e "GITHUB_ACTION_REPOSITORY" -e "GITHUB_ACTION_REF" -e "GITHUB_PATH" -e "GITHUB_ENV" -e "GITHUB_STEP_SUMMARY" -e "GITHUB_STATE" -e "GITHUB_OUTPUT" -e "RUNNER_OS" -e "RUNNER_ARCH" -e "RUNNER_NAME" -e "RUNNER_ENVIRONMENT" -e "RUNNER_TOOL_CACHE" -e "RUNNER_TEMP" -e "RUNNER_WORKSPACE" -e "ACTIONS_RUNTIME_URL" -e "ACTIONS_RUNTIME_TOKEN" -e "ACTIONS_CACHE_URL" -e "ACTIONS_RESULTS_URL" -e GITHUB_ACTIONS=true -e CI=true -v "/var/run/docker.sock":"/var/run/docker.sock" -v "/home/runner/work/_temp/_github_home":"/github/home" -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands" -v "/home/runner/work/health-management-system/health-management-system":"/github/workspace" 968d58:f3fbb1d4897e4b038bf6ac39a069d75a
2025-06-24T07:37:57.4544261Z 2025/06/24 07:37:57 Error: can't connect without a private SSH key or password
