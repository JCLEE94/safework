name: 'Retry Docker Push'
description: 'Push Docker image with retry logic for 413 errors'
inputs:
  registry:
    description: 'Docker registry URL'
    required: true
  image:
    description: 'Image name with tag'
    required: true
  dockerfile:
    description: 'Path to Dockerfile'
    required: false
    default: './deployment/Dockerfile.prod'
  context:
    description: 'Build context'
    required: false
    default: '.'
  max-attempts:
    description: 'Maximum retry attempts'
    required: false
    default: '3'

runs:
  using: 'composite'
  steps:
    - name: Push with retry
      shell: bash
      run: |
        ATTEMPT=0
        MAX_ATTEMPTS=${{ inputs.max-attempts }}
        
        while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
          echo "üöÄ Push attempt $((ATTEMPT + 1))/$MAX_ATTEMPTS"
          
          if docker buildx build \
            --push \
            --platform linux/amd64 \
            --file ${{ inputs.dockerfile }} \
            --tag ${{ inputs.registry }}/${{ inputs.image }} \
            --cache-from type=registry,ref=${{ inputs.registry }}/${{ inputs.image }}:buildcache \
            --cache-to type=registry,ref=${{ inputs.registry }}/${{ inputs.image }}:buildcache,mode=max \
            ${{ inputs.context }}; then
            echo "‚úÖ Push successful!"
            exit 0
          fi
          
          EXIT_CODE=$?
          
          # Check if error is 413
          if docker buildx build --push ... 2>&1 | grep -q "413"; then
            echo "‚ö†Ô∏è  Got 413 error, trying with reduced layers..."
            
            # Try without cache
            if docker buildx build \
              --push \
              --platform linux/amd64 \
              --file ${{ inputs.dockerfile }} \
              --tag ${{ inputs.registry }}/${{ inputs.image }} \
              --no-cache \
              ${{ inputs.context }}; then
              echo "‚úÖ Push successful without cache!"
              exit 0
            fi
          fi
          
          ATTEMPT=$((ATTEMPT + 1))
          
          if [ $ATTEMPT -lt $MAX_ATTEMPTS ]; then
            echo "‚è≥ Waiting 60 seconds before retry..."
            sleep 60
          fi
        done
        
        echo "‚ùå All push attempts failed!"
        exit 1