name: GitOps CI/CD Pipeline

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: safework
  CHART_NAME: safework
  NAMESPACE: safework

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Registry
        run: |
          echo "🔐 Registry 로그인 중..."
          echo "bingogo1" | docker login registry.jclee.me -u admin --password-stdin
        
      - name: Build and push Docker image
        run: |
          echo "🚀 Docker 이미지 빌드 시작"
          
          # 이미지 태그 설정
          COMMIT_SHA="${{ github.sha }}"
          IMAGE_TAG="${COMMIT_SHA:0:7}"
          
          echo "이미지 태그: ${IMAGE_TAG}"
          
          # Docker 이미지 빌드 및 푸시 (인증 없는 레지스트리)
          docker build -t ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} .
          docker tag ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ${REGISTRY}/${IMAGE_NAME}:latest
          
          # 이미지 푸시
          docker push ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
          docker push ${REGISTRY}/${IMAGE_NAME}:latest
          
          echo "✅ Docker 이미지 빌드 및 푸시 완료"
          
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'
          
      - name: Package and upload Helm chart
        run: |
          echo "📦 Helm Chart 패키징 시작"
          
          # Chart 버전 설정
          COMMIT_SHA="${{ github.sha }}"
          CHART_VERSION="1.0.0-${COMMIT_SHA:0:7}"
          
          echo "Chart Version: ${CHART_VERSION}"
          
          # Chart.yaml 버전 업데이트
          sed -i "s/^version:.*/version: ${CHART_VERSION}/" ./charts/${CHART_NAME}/Chart.yaml
          
          # Chart 패키징
          helm package ./charts/${CHART_NAME} --destination ./
          
          # ChartMuseum에 업로드
          echo "📤 ChartMuseum에 Chart 업로드 중..."
          curl -u admin:bingogo1 --data-binary "@${CHART_NAME}-${CHART_VERSION}.tgz" \
            https://charts.jclee.me/api/charts
          
          echo "✅ Helm Chart 패키징 및 업로드 완료"
          
      - name: Tag latest for ArgoCD Image Updater
        run: |
          echo "🔄 Latest 태그 업데이트"
          
          # 이미지 태그 설정
          COMMIT_SHA="${{ github.sha }}"
          IMAGE_TAG="${COMMIT_SHA:0:7}"
          
          # latest 태그로도 푸시 (ArgoCD Image Updater가 감지)
          docker tag ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ${REGISTRY}/${IMAGE_NAME}:latest
          docker push ${REGISTRY}/${IMAGE_NAME}:latest
          
          echo "✅ Latest 태그 업데이트 완료"
          echo "🔄 ArgoCD Image Updater가 자동으로 배포합니다"