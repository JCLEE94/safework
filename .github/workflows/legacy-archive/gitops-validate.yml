name: Validate GitOps

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

env:
  REGISTRY: registry.jclee.me
  CHART_REPO: https://charts.jclee.me

jobs:
  validate:
    runs-on: self-hosted
    
    steps:
    - name: Validate Docker Registry
      env:
        DOCKER_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_REGISTRY_PASS }}
      run: |
        echo "üîç Validating Docker Registry..."
        
        # Check registry catalog
        IMAGES=$(curl -s -u "$DOCKER_USER:$DOCKER_PASS" \
          $REGISTRY/v2/_catalog | jq -r '.repositories[]' | grep safework || echo "none")
        
        if [ "$IMAGES" != "none" ]; then
          echo "‚úÖ Registry accessible"
          echo "üì¶ Found images: $IMAGES"
        else
          echo "‚ùå Registry validation failed"
          exit 1
        fi

    - name: Validate ChartMuseum
      env:
        HELM_USER: ${{ secrets.HELM_REPO_USERNAME }}
        HELM_PASS: ${{ secrets.HELM_REPO_PASSWORD }}
      run: |
        echo "üîç Validating ChartMuseum..."
        
        # Check chart repository
        LATEST_VERSION=$(curl -s -u "$HELM_USER:$HELM_PASS" \
          $CHART_REPO/api/charts/safework | jq -r '.[0].version')
        
        if [ -n "$LATEST_VERSION" ] && [ "$LATEST_VERSION" != "null" ]; then
          echo "‚úÖ ChartMuseum accessible"
          echo "üìä Latest chart version: $LATEST_VERSION"
        else
          echo "‚ùå ChartMuseum validation failed"
          exit 1
        fi

    - name: Validate Production
      run: |
        echo "üîç Validating Production..."
        
        # Check production health
        HEALTH=$(curl -s https://safework.jclee.me/health | jq -r '.status')
        
        if [ "$HEALTH" = "healthy" ]; then
          echo "‚úÖ Production is healthy"
        else
          echo "‚ùå Production health check failed"
          exit 1
        fi

    - name: Summary
      run: |
        echo "======================================"
        echo "‚úÖ All GitOps components validated"
        echo "======================================"