name: Claude AI Pull Request Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

jobs:
  claude-pr-review:
    if: github.event_name == 'pull_request' || (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    runs-on: [self-hosted, linux]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Claude AI Pull Request Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
        run: |
          echo "🤖 Claude AI PR 리뷰 시작..."
          
          # PR 정보 가져오기
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            PR_NUMBER="${{ github.event.issue.number }}"
            # Issue comment에서 PR 정보 가져오기
            PR_INFO=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER")
            BASE_SHA=$(echo "$PR_INFO" | jq -r '.base.sha')
            HEAD_SHA=$(echo "$PR_INFO" | jq -r '.head.sha')
          fi
          
          echo "📊 PR #$PR_NUMBER 분석 중..."
          echo "Base: $BASE_SHA"
          echo "Head: $HEAD_SHA"
          
          # 변경된 파일들 분석
          git fetch origin
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA | grep -E '\.(py|tsx?|js|yaml|yml|json)$' | head -15)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "🔍 변경된 코드 파일이 없습니다."
            exit 0
          fi
          
          echo "📂 변경된 파일들:"
          echo "$CHANGED_FILES"
          
          # 변경사항 분석
          DIFF_CONTENT=""
          for file in $CHANGED_FILES; do
            echo "🔍 분석 중: $file"
            FILE_DIFF=$(git diff $BASE_SHA $HEAD_SHA -- "$file" | head -100)
            if [ ! -z "$FILE_DIFF" ]; then
              DIFF_CONTENT="$DIFF_CONTENT\n\n### $file 변경사항:\n\`\`\`diff\n$FILE_DIFF\n\`\`\`"
            fi
          done
          
          # PR 제목과 설명 가져오기
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          # Claude API 호출 프롬프트
          REVIEW_PROMPT="SafeWork Pro 건설업 보건관리 시스템의 Pull Request를 검토해주세요.
          
          ## PR 정보:
          - 제목: $PR_TITLE
          - 설명: $PR_BODY
          
          ## 변경된 파일들:
          $CHANGED_FILES
          
          ## 상세 변경사항:
          $DIFF_CONTENT
          
          ## 검토 기준:
          1. 🔒 보안: SQL Injection, XSS, 인증/인가, 개인정보 보호
          2. 🏗️ 아키텍처: FastAPI 패턴, React 컴포넌트 구조, DB 스키마
          3. 🐛 버그: 로직 오류, 예외처리, 경계값 검사
          4. 📊 성능: 쿼리 최적화, 캐싱, 불필요한 호출
          5. 🦺 도메인: 건설업 보건관리, 산업안전보건법 준수
          6. 🧹 코드 품질: 가독성, 유지보수성, 테스트
          
          ## 응답 형식:
          ### ✅ 좋은 점
          - 구체적인 개선사항들...
          
          ### ⚠️ 개선 필요사항
          - 우선순위별 이슈들...
          
          ### 🚀 제안사항
          - 추가 개선 아이디어들...
          
          간결하고 실행 가능한 피드백을 한국어로 제공해주세요."
          
          # Claude API 호출
          echo "🔄 Claude AI 분석 중..."
          curl -s -X POST "https://api.anthropic.com/v1/messages" \
            -H "Content-Type: application/json" \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -d "{
              \"model\": \"claude-3-haiku-20240307\",
              \"max_tokens\": 3000,
              \"messages\": [{
                \"role\": \"user\",
                \"content\": $(echo "$REVIEW_PROMPT" | jq -Rs .)
              }]
            }" > claude_pr_review.json
          
          # 결과 처리
          if [ -f claude_pr_review.json ] && jq -e '.content[0].text' claude_pr_review.json >/dev/null 2>&1; then
            echo "✅ Claude PR 리뷰 완료"
            
            REVIEW_TEXT=$(jq -r '.content[0].text' claude_pr_review.json)
            
            # PR에 리뷰 코멘트 추가
            COMMENT_BODY="## 🤖 Claude AI Code Review
            
            > SafeWork Pro 건설업 보건관리 시스템 전문 리뷰
            
            $REVIEW_TEXT
            
            ---
            *이 리뷰는 Claude AI에 의해 자동으로 생성되었습니다. 참고용으로 사용하시고 최종 검토는 개발팀에서 진행해주세요.*"
            
            # GitHub PR 코멘트 추가
            curl -s -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PR_NUMBER/comments" \
              -d "{\"body\": $(echo "$COMMENT_BODY" | jq -Rs .)}"
            
            echo "📝 PR 코멘트가 추가되었습니다."
          else
            echo "⚠️ Claude API 호출 실패"
            if [ -f claude_pr_review.json ]; then
              echo "응답 내용:"
              cat claude_pr_review.json
            fi
          fi