name: Claude Simple Action (1회 인증 기반)

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  claude:
    name: Claude PR Assistant
    # @claude 멘션이 있는 경우만 실행
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'workflow_dispatch')
    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check OAuth tokens
        id: oauth_check
        run: |
          echo "🔍 Claude OAuth 토큰 상태 확인..."
          
          ACCESS_TOKEN="${{ secrets.CLAUDE_ACCESS_TOKEN }}"
          REFRESH_TOKEN="${{ secrets.CLAUDE_REFRESH_TOKEN }}"
          EXPIRES_AT="${{ secrets.CLAUDE_EXPIRES_AT }}"
          
          if [ -n "$ACCESS_TOKEN" ] && [ -n "$REFRESH_TOKEN" ] && [ -n "$EXPIRES_AT" ]; then
            echo "✅ OAuth 토큰 존재 확인"
            
            # 만료 시간 확인
            CURRENT_TIME=$(date +%s)
            if [ "$EXPIRES_AT" -gt "$CURRENT_TIME" ]; then
              TIME_LEFT=$(($EXPIRES_AT - $CURRENT_TIME))
              HOURS_LEFT=$((TIME_LEFT / 3600))
              echo "🕐 토큰 유효 시간: ${HOURS_LEFT}시간"
              echo "tokens_valid=true" >> $GITHUB_OUTPUT
            else
              echo "⚠️ 토큰 만료됨 - 갱신 필요"
              echo "tokens_valid=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "❌ OAuth 토큰 없음"
            echo "tokens_valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Claude with OAuth (grll action)
        if: steps.oauth_check.outputs.tokens_valid == 'true'
        uses: grll/claude-code-action@beta
        with:
          use_oauth: true
          claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
          timeout_minutes: "60"
          system_prompt: |
            SafeWork Pro는 한국 건설업 보건관리 시스템입니다.
            
            주요 기능:
            - 근로자 건강 관리 
            - 건강 검진 기록 관리
            - 작업환경 모니터링
            - 화학물질 관리 (MSDS)
            - 사고 보고 시스템
            
            분석 시 다음을 중점적으로 검토해주세요:
            1. 한국 산업안전보건법/개인정보보호법 컴플라이언스
            2. 의료 데이터 보안 (민감정보 처리)
            3. FastAPI 엔드포인트 보안
            4. PostgreSQL 데이터베이스 보안
            5. Docker 컨테이너 보안
            
            중요 이슈 발견 시 GitHub Issue를 생성해주세요.
            응답은 한국어로 작성해주세요.
        continue-on-error: true

      - name: OAuth setup required
        if: steps.oauth_check.outputs.tokens_valid == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const message = [
              '## 🔐 Claude OAuth 인증 필요',
              '',
              '❌ Claude Code OAuth 토큰이 없거나 만료되었습니다.',
              '',
              '### 📋 인증 설정 방법:',
              '',
              '1. **OAuth 워크플로우 실행**:',
              '   • [Claude OAuth 인증 실행](https://github.com/${{ github.repository }}/actions/workflows/claude-oauth-onetime.yml)',
              '   • "Run workflow" 클릭 (코드는 비워두세요)',
              '',
              '2. **Claude 로그인**:',
              '   • 워크플로우에서 제공되는 URL로 이동',
              '   • Claude 계정으로 로그인',
              '   • 인증 코드 복사',
              '',
              '3. **토큰 저장**:',
              '   • 워크플로우를 다시 실행',
              '   • \'code\' 필드에 인증 코드 입력',
              '   • "Run workflow" 클릭',
              '',
              '설정 완료 후 다시 @claude를 멘션해주세요! 🤖'
            ].join('\n');

            // 코멘트가 있는 경우 해당 이슈/PR에 응답
            if (context.payload.issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: message
              });
            } else if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
            }

      - name: Action summary
        if: always()
        run: |
          echo "📊 Claude Action 실행 요약"
          echo "========================="
          echo "OAuth 토큰 유효: ${{ steps.oauth_check.outputs.tokens_valid }}"
          echo "실행 시간: $(date)"
          echo "이벤트: ${{ github.event_name }}"
          
          if [ "${{ steps.oauth_check.outputs.tokens_valid }}" = "true" ]; then
            echo "✅ Claude Action 실행 완료"
          else
            echo "⚠️ OAuth 인증 필요 - 위 단계를 따라 설정하세요"
          fi