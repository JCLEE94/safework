name: SafeWork Pro - Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: [self-hosted, linux]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: health_management
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 16379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov pytest-asyncio pytest-timeout
          
      - name: Run tests
        env:
          DATABASE_URL: postgresql://admin:password@localhost:15432/health_management
          REDIS_URL: redis://localhost:16379/0
          JWT_SECRET: test-secret-key
          PYTHONPATH: ${{ github.workspace }}
        timeout-minutes: 10
        run: |
          pytest tests/ -v --cov=src --cov-report=html --cov-report=term --timeout=300 -x
          
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  test-frontend:
    runs-on: [self-hosted, linux]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        working-directory: frontend
        run: |
          export NPM_CONFIG_CACHE=/tmp/.npm
          mkdir -p /tmp/.npm
          npm install --cache /tmp/.npm
        
      - name: Run tests
        working-directory: frontend
        run: |
          export NPM_CONFIG_CACHE=/tmp/.npm
          npm run test
        
      - name: Build frontend
        working-directory: frontend
        run: |
          export NPM_CONFIG_CACHE=/tmp/.npm
          npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/