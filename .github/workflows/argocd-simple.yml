name: ArgoCD Simple Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY_URL: registry.jclee.me
  IMAGE_NAME: safework
  ARGOCD_SERVER: argo.jclee.me

jobs:
  build-and-deploy:
    runs-on: [self-hosted, linux]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        run: |
          echo "bingogo1" | docker login ${{ env.REGISTRY_URL }} -u qws9411 --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest

      - name: Install ArgoCD CLI
        run: |
          if ! command -v argocd &> /dev/null; then
            curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
            sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
            rm argocd-linux-amd64
          fi

      - name: Deploy via ArgoCD
        run: |
          # Login to ArgoCD
          argocd login ${{ env.ARGOCD_SERVER }} \
            --username admin \
            --password bingogo1 \
            --insecure
          
          # Create/sync application
          if argocd app get safework &>/dev/null; then
            echo "Application exists, syncing..."
            argocd app sync safework --prune --force
          else
            echo "Creating new application..."
            kubectl apply -f k8s/argocd/application.yaml
            sleep 10
            argocd app sync safework --prune --force
          fi
          
          # Wait for sync
          argocd app wait safework --timeout 600 --health

      - name: Deployment status
        run: |
          echo "🚀 Deployment completed!"
          echo "🔗 ArgoCD: https://${{ env.ARGOCD_SERVER }}/applications/safework"
          echo "🌐 App: https://safework.jclee.me"
          kubectl get pods -n safework || echo "Namespace not ready yet"