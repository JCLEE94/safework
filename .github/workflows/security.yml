name: SafeWork Pro - Security Scan

on:
  # push:
  #   branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: [self-hosted, linux]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false
        
      - name: Run Trivy vulnerability scanner
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
          trivy fs . --severity CRITICAL,HIGH --format sarif --output trivy-results.sarif || true
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
          
  docker-scan:
    runs-on: [self-hosted, linux]
    needs: security-scan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false
        
      - name: Pull SafeWork Pro Docker image for scan
        run: |
          docker pull registry.jclee.me/safework:latest
          docker tag registry.jclee.me/safework:latest safework-scan:latest
        
      - name: Run Trivy on Docker image
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: 'safework-scan:latest'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'
        continue-on-error: true
          
  dependency-check:
    runs-on: [self-hosted, linux]
    container:
      image: python:3.11-slim
      options: --user root
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false
          
      - name: Python Dependency Check
        run: |
          python -m pip install --upgrade pip
          pip install safety
          mkdir -p $HOME/.safety || true
          safety check --json || echo "Safety check completed with warnings"
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: npm audit
        working-directory: frontend
        run: |
          export NPM_CONFIG_CACHE=/tmp/.npm
          mkdir -p /tmp/.npm
          npm install --cache /tmp/.npm
          npm audit --audit-level=high || echo "npm audit completed with warnings"