name: SafeWork Pro - Build and Push

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: safework

jobs:
  build:
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build SafeWork Pro Image
        run: |
          # 빌드 시간 설정
          BUILD_TIME=$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S KST')
          
          # Docker 이미지 빌드
          docker build -f deployment/Dockerfile.prod -t ${{ env.IMAGE_NAME }}:latest \
            --build-arg BUILD_TIME="$BUILD_TIME" \
            .
        
      - name: Login to Private Registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
          
      - name: Tag and Push to Registry
        run: |
          # 레지스트리용 태그 생성
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # 레지스트리에 푸시
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Test Container Health
        run: |
          # 기존 테스트 컨테이너 정리
          docker stop safework-test || true
          docker rm safework-test || true
          
          # 테스트용 컨테이너 실행 (환경변수 포함)
          docker run -d --name safework-test -p 3002:8000 \
            -e DISABLE_AUTH=true \
            -e DATABASE_URL=sqlite:///test.db \
            -e REDIS_URL=redis://localhost:6379/0 \
            ${{ env.IMAGE_NAME }}:latest
          
          # 헬스체크 대기 (더 오래 대기)
          echo "🔍 컨테이너 상태 확인 중..."
          sleep 45
          
          # 컨테이너 로그 확인
          echo "📋 컨테이너 로그:"
          docker logs safework-test --tail 20
          
          # 헬스체크 테스트 (재시도 포함)
          echo "🏥 헬스체크 테스트..."
          for i in {1..5}; do
            if curl -f http://localhost:3002/health; then
              echo "✅ 헬스체크 성공!"
              break
            else
              echo "❌ 헬스체크 실패 (시도 $i/5), 5초 후 재시도..."
              sleep 5
            fi
          done
          
          # 테스트 컨테이너 정리
          docker stop safework-test
          docker rm safework-test

  deploy:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to Production
        run: |
          # Watchtower가 자동으로 처리하므로 별도 배포 작업 불필요
          echo "✅ SafeWork Pro 이미지가 registry.jclee.me/safework:latest로 푸시되었습니다"
          echo "🔄 Watchtower가 자동으로 운영 서버에 배포합니다"
          
      - name: Notify Deployment
        run: |
          echo "🎉 SafeWork Pro 배포 완료!"
          echo "📍 Registry: registry.jclee.me/safework:latest"  
          echo "🔗 Public URL: https://safework.jclee.me"
          echo "🏠 Local URL: http://192.168.50.215:3001"
          echo "🏥 건설업 보건관리 시스템 업데이트됨"
          echo "📦 Repository: JCLEE94/safework"