name: Production Deploy

on:
  push:
    branches: [main]

env:
  REGISTRY: registry.jclee.me
  IMAGE_NAME: health-management-system

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            echo "üöÄ Starting deployment..."
            
            # Navigate to project directory
            cd ~/app/health || { echo "Project directory not found"; exit 1; }
            
            # Pull latest code
            echo "üì• Pulling latest code..."
            git pull origin main || { echo "Git pull failed"; exit 1; }
            
            # Build Docker image
            echo "üî® Building Docker image..."
            docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest . || { echo "Docker build failed"; exit 1; }
            
            # Tag with commit SHA
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            
            # Login to registry
            echo "üîê Logging in to registry..."
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin || echo "‚ö†Ô∏è Registry login failed"
            
            # Push to registry
            echo "üì§ Pushing to registry..."
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest || echo "‚ö†Ô∏è Push failed - continuing with local image"
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} || echo "‚ö†Ô∏è Push failed - continuing with local image"
            
            # If using Watchtower
            if [ -f docker-compose.watchtower.yml ]; then
              echo "üîÑ Watchtower will detect and update the container..."
              # Just ensure Watchtower is running
              docker ps | grep watchtower || docker-compose -f docker-compose.watchtower.yml up -d watchtower
            else
              # Manual update
              echo "üîÑ Updating containers..."
              /usr/local/bin/docker-compose pull || true
              /usr/local/bin/docker-compose up -d --force-recreate
            fi
            
            # Health check
            echo "üè• Running health check..."
            sleep 15
            if curl -f http://localhost:3001/health; then
              echo "‚úÖ Deployment successful!"
              echo "üìä Container status:"
              docker ps | grep health
            else
              echo "‚ùå Health check failed"
              echo "üìã Container logs:"
              docker logs health-management-system --tail=50 || /usr/local/bin/docker-compose logs --tail=50 health-app
              exit 1
            fi