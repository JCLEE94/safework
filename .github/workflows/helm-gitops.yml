name: Helm GitOps CI/CD

on:
  push:
    branches: [ main ]

env:
  REGISTRY: registry.jclee.me
  HELM_REGISTRY: chart.jclee.me
  IMAGE_NAME: safework

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.tag.outputs.tag }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate tags
      id: tag
      run: |
        TAG="prod-$(date +'%Y%m%d')-${GITHUB_SHA:0:7}"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Generated tag: $TAG"

    - name: Build and push Docker image
      env:
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        # Login to Docker registry
        echo "$REGISTRY_PASSWORD" | docker login ${{ env.REGISTRY }} -u admin --password-stdin
        
        # Build and tag image
        docker build -f deployment/Dockerfile.prod \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} .
        
        # Push images
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}

  update-helm-chart:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Update Helm values
      run: |
        cd k8s/helm/safework
        
        # Update image tag in values.yaml
        sed -i "s/tag: .*/tag: \"${{ needs.build-and-push.outputs.image-tag }}\"/" values.yaml
        
        # Update Chart version
        CURRENT_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        sed -i "s/version: .*/version: $NEW_VERSION/" Chart.yaml
        
        # Update appVersion
        sed -i "s/appVersion: .*/appVersion: \"${{ needs.build-and-push.outputs.image-tag }}\"/" Chart.yaml
        
        echo "Updated Chart version to $NEW_VERSION"
        echo "Updated image tag to ${{ needs.build-and-push.outputs.image-tag }}"

    - name: Package and push Helm chart
      env:
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        # Login to Helm registry
        echo "$REGISTRY_PASSWORD" | helm registry login ${{ env.HELM_REGISTRY }} -u admin --password-stdin
        
        # Package chart
        cd k8s/helm
        helm package safework
        
        # Push to Helm registry
        CHART_PACKAGE=$(ls safework-*.tgz | head -n 1)
        helm push $CHART_PACKAGE oci://${{ env.HELM_REGISTRY }}/charts
        
        echo "âœ… Helm chart pushed: $CHART_PACKAGE"

    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        git add k8s/helm/safework/values.yaml k8s/helm/safework/Chart.yaml
        git commit -m "chore: Update Helm chart version and image tag to ${{ needs.build-and-push.outputs.image-tag }}"
        git push