name: Main CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_URL: registry.jclee.me
  IMAGE_NAME: safework

jobs:
  build:
    name: Build and Push
    runs-on: [self-hosted, linux]
    outputs:
      status: ${{ job.status }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build and push Docker image
        run: |
          # Login to registry
          echo "bingogo1" | docker login ${{ env.REGISTRY_URL }} -u "qws9411" --password-stdin
          
          # Build image - Intentional failure for testing
          echo "ðŸ§ª Testing CI/CD failure tracking..."
          echo "ERROR: Simulating build failure!"
          exit 1
          docker build -f deployment/Dockerfile.prod -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest .
          
          # Push image
          docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest
          
          echo "âœ… Image pushed successfully!"
      
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = `[CI/CD Failure] Main CI/CD Pipeline - ${context.ref.replace('refs/heads/', '')}`;
            
            // Check for existing open issues with same title
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'bug'
            });
            
            const existingIssue = issues.data.find(issue => issue.title === issueTitle);
            
            if (!existingIssue) {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: `## ðŸš¨ CI/CD Pipeline Failure\n\n**Workflow:** Main CI/CD Pipeline\n**Branch:** ${context.ref.replace('refs/heads/', '')}\n**Commit:** ${context.sha.substring(0, 7)}\n**Time:** ${new Date().toISOString()}\n**Actor:** @${context.actor}\n\n### ðŸ“‹ Details\n\n[View workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n### ðŸ”§ Common Solutions\n\n1. Check Docker build logs\n2. Verify registry credentials\n3. Check Dockerfile syntax\n4. Ensure all dependencies are available\n\n---\n*Automatically created by CI/CD failure tracking*`,
                labels: ['bug', 'ci/cd']
              });
              console.log(`Created issue #${issue.data.number}`);
            } else {
              console.log(`Issue already exists: #${existingIssue.number}`);
            }