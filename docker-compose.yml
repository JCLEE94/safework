version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: health-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: health_management
      TZ: Asia/Seoul
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - health-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d health_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: health-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - health-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  health-app:
    image: registry.jclee.me/health:latest
    container_name: health-app-1
    restart: unless-stopped
    ports:
      - "3001:8000"
    environment:
      DATABASE_URL: postgresql://admin:password@postgres:5432/health_management
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: your-secret-key-here
      DEBUG: "false"
      LOG_LEVEL: INFO
      TZ: Asia/Seoul
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - health-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  health-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: