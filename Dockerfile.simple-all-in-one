# SafeWork Pro - Simple All-in-One Container
# Using existing built frontend files to avoid Node.js version issues

FROM python:3.13-slim

# Build arguments
ARG BUILD_TIME
ENV BUILD_TIME=$BUILD_TIME
ENV TZ=Asia/Seoul

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    supervisor \
    postgresql-15 \
    postgresql-client-15 \
    redis-server \
    wkhtmltopdf \
    fonts-nanum \
    --no-install-recommends \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source
COPY src/ ./src/
COPY main.py ./
COPY document/ ./document/

# Copy existing frontend build
COPY dist/ ./dist/

# Create necessary directories
RUN mkdir -p uploads logs /var/lib/postgresql/data /var/run/postgresql /var/lib/redis /var/run/redis

# Configure PostgreSQL
ENV PGDATA=/var/lib/postgresql/data
ENV POSTGRES_USER=admin
ENV POSTGRES_PASSWORD=safework123
ENV POSTGRES_DB=health_management
ENV DATABASE_URL=postgresql://admin:safework123@localhost:5432/health_management
ENV REDIS_URL=redis://localhost:6379/0
ENV JWT_SECRET=safework-pro-secret-key-2024
ENV DEBUG=false
ENV LOG_LEVEL=INFO

RUN mkdir -p /var/lib/postgresql/data /var/run/postgresql \
    && chown -R postgres:postgres /var/lib/postgresql /var/run/postgresql \
    && chmod -R 755 /var/lib/postgresql

# Configure Redis
RUN mkdir -p /var/lib/redis /var/run/redis \
    && sed -i 's/^bind 127.0.0.1 ::1/bind 0.0.0.0/' /etc/redis/redis.conf \
    && sed -i 's/^# requirepass foobared/requirepass ""/' /etc/redis/redis.conf \
    && sed -i 's/^dir .*$/dir \/var\/lib\/redis/' /etc/redis/redis.conf \
    && chown -R redis:redis /var/lib/redis /var/run/redis

# Copy startup script and supervisor config
COPY start-services.sh /app/start-services.sh
COPY supervisor-simple.conf /etc/supervisor/conf.d/safework.conf
RUN chmod +x /app/start-services.sh

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:3001/health || exit 1

# Volume mounts
VOLUME ["/var/lib/postgresql/data", "/app/uploads", "/app/logs", "/var/lib/redis"]

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]